// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: invalid_subscription.sql

package sqldb

import (
	"context"
	"database/sql"
)

const insertInvalidSubscription = `-- name: InsertInvalidSubscription :exec
INSERT INTO invalid_subscription (
  user_external_id,
  stripe_subscription_id,
  stripe_plan_id,
  stripe_customer_id
) VALUES ($1, $2, $3, $4)
`

type InsertInvalidSubscriptionParams struct {
	UserExternalID       string         `json:"user_external_id"`
	StripeSubscriptionID sql.NullString `json:"stripe_subscription_id"`
	StripePlanID         sql.NullString `json:"stripe_plan_id"`
	StripeCustomerID     sql.NullString `json:"stripe_customer_id"`
}

func (q *Queries) InsertInvalidSubscription(ctx context.Context, arg InsertInvalidSubscriptionParams) error {
	_, err := q.db.ExecContext(ctx, insertInvalidSubscription,
		arg.UserExternalID,
		arg.StripeSubscriptionID,
		arg.StripePlanID,
		arg.StripeCustomerID,
	)
	return err
}
