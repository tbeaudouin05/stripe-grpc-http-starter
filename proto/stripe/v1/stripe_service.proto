syntax = "proto3";

package stripe.v1;

option go_package = "github.com/tbeaudouin05/stripe-trellai/internal/autogenerated/proto/stripe/v1;stripev1";

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/protobuf/empty.proto";

// StripeService exposes subscription operations.
service StripeService {
  // Cancels a subscription by Stripe subscription id.
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse) {
    option (google.api.http) = {
      post: "/api/cancel-subscription"
      body: "*"
    };
  }

  // Verifies a user's subscription validity by external user id.
  rpc VerifySubscriptionValidity(VerifySubscriptionValidityRequest) returns (VerifySubscriptionValidityResponse) {
    option (google.api.http) = {
      post: "/api/verify-subscription-validity"
      body: "*"
    };
  }

  // Processes a Stripe webhook event.
  // Uses google.api.HttpBody to receive the raw payload via grpc-gateway.
  rpc HandleWebhook(google.api.HttpBody) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/receive-stripe-webhook"
      body: "*"
    };
  }

  // Adds spending units in batch.
  rpc AddSpendingUnits(AddSpendingUnitsRequest) returns (AddSpendingUnitsResponse) {
    option (google.api.http) = {
      post: "/api/spending-units"
      body: "*"
    };
  }
}

message CancelSubscriptionRequest {
  string subscription_id = 1;
}

message CancelSubscriptionResponse {}

message VerifySubscriptionValidityRequest {
  string user_external_id = 1;
}

message VerifySubscriptionValidityResponse {
  bool is_valid_subscription = 1;
  string invalidity_type = 2;
  string validity_type = 3;
  string stripe_customer_email = 4;
}

// Webhook request/response now use google.api.HttpBody and google.protobuf.Empty

// SpendingUnit represents a unit to insert.
message SpendingUnit {
  string external_id = 1;
  string user_external_id = 2;
  int32 amount = 3;
  int64 created_at = 4; // unix ms
}

message AddSpendingUnitsRequest {
  repeated SpendingUnit items = 1;
}

message AddSpendingUnitsResponse {
  int32 inserted = 1; // number of rows inserted (duplicates skipped)
}
